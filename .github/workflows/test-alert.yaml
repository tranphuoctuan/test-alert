on: 
    push:
      branches:
         'main'
jobs:
    new_push_job:
      runs-on: ubuntu-latest
      name: New push to repo
      steps:
        # - run:
        #       exit 1

        - name: pushalert to slack channel
          uses: 8398a7/action-slack@v3
          with:
                status: ${{ job.status }}
                fields: repo,message,commit,author,action,eventName,ref,workflow,job,took,pullRequest
                custom_payload: |
                    {
                      attachments: [{
                        color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
                        text: `${process.env.AS_WORKFLOW}\n${process.env.AS_JOB} (${process.env.AS_COMMIT}) of ${process.env.AS_REPO}@${process.env.AS_REF} by ${process.env.AS_AUTHOR} ${{ job.status }} in ${process.env.AS_TOOK}`,
                      }]
                    }
          env:
                SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          if: always()
        # - uses: 8398a7/action-slack@v3
        #   with:
        #         status: ${{ job.status }}
        #         fields: repo,message,job,took
        #   env:
                # SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    # matrix-notification:
    #       strategy:
    #         matrix:
    #           os: [ubuntu-20.04, ubuntu-22.04]
    #       runs-on: ${{ matrix.os }}
          # steps:
          #   - uses: 8398a7/action-slack@v3
          #     with:
          #       status: ${{ job.status }}
          #       fields: job,took
          #     env:
          #       SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_FOR_INTEGRATION_TEST }}
          #       MATRIX_CONTEXT: ${{ toJson(matrix) }}
              # if: always()