name: push-alert-to-slack-channel

on: 
    push:
      branches:
         'main'
permissions:
  id-token: write
  contents: read

jobs:
  run-aws:
    runs-on: ubuntu-latest
    steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: Setup Node
          uses: actions/setup-node@v4
          with:
              node-version-file: "package.json"
              cache: npm
        - name: Install dependencies if cache does not exist
          run: npm ci
        - name: run synth
          run: cdk synth TestAlertStack
        - name : run cdk diff
          run : cdk diff TestAlertStack

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v4
          with:
            role-to-assume: arn:aws:iam::967779793699:role/DeployRole
            aws-region: ap-southeast-1

        - name: Fetch AWS SSM parameters
          uses: dkershner6/aws-ssm-getparameters-action@v2
          with:
            parameterPairs: "SLACK_WEBHOOK_URL = SLACK_WEBHOOK_URL"

        - name: pushalert to slack channel
          if: ${{ success() || failure() }}
          uses: 8398a7/action-slack@v3
          with:
            status: ${{ job.status }}
            fields: pullRequest,author,workflow
            custom_payload: |
              {
                attachments: [{
                  color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger',
                  text: `${process.env.AS_WORKFLOW}\n${process.env.AS_JOB} (${process.env.AS_COMMIT}) of ${process.env.AS_REPO}@${process.env.AS_REF} by ${process.env.AS_AUTHOR} ${{ job.status }} in ${process.env.AS_TOOK}`,
                }]
              }
          env:
            SLACK_WEBHOOK_URL: ${{ env.SLACK_WEBHOOK_URL }}
            if: always()