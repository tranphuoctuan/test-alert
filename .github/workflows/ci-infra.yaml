name: push-alert-to-slack-channel

on:
  pull_request:
    paths:
      - bin/**
      - lib/**
      - package.json
      - .github/workflows/ci-infra.yaml

  workflow_call:
    inputs:
      stageName:
        type: string
        required: true
      awsRoleArn:
        type: string
        required: true

permissions:
  id-token: write
  contents: read

jobs:
  set-env:
    runs-on: ubuntu-latest
    outputs:
      stageName: ${{ steps.env-setting.outputs.stageName }}
      awsRoleArn: ${{ steps.env-setting.outputs.awsRoleArn }}
    steps:
      - id: env-setting
        run: |
          TARGET_BRANCH="${{ github.event.pull_request.base.ref }}"
          TARGET_TAG="${{ github.ref }}"

          if [[ $TARGET_BRANCH == "main" ]]; then
            echo "Setting environment to dev"
            echo "stageName=dev" >> $GITHUB_OUTPUT
            echo "awsRoleArn=arn:aws:iam::967779793699:role/DeployRole" >> $GITHUB_OUTPUT
          elif [[ $TARGET_TAG == refs/tags/* ]]; then
            echo "Setting environment to stg"
            echo "stageName=stg" >> $GITHUB_OUTPUT
            echo "awsRoleArn=arn:aws:iam::967779793699:role/DeployRole" >> $GITHUB_OUTPUT        
          else
            echo "No specific condition met. No environment variable set (set to dev)"
            echo "stageName=dev" >> $GITHUB_OUTPUT
            echo "awsRoleArn=arn:aws:iam::967779793699:role/DeployRole" >> $GITHUB_OUTPUT
          fi
  ci-infra:
    runs-on: ubuntu-latest
    needs: set-env
    outputs:
      jobStatus: ${{ job.status }}

    steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: Setup Node
          uses: actions/setup-node@v4
          with:
              node-version-file: "package.json"
              cache: npm

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v4
          with:
              role-to-assume: ${{ needs.set-env.outputs.awsRoleArn }}
              aws-region: ap-southeast-1

        - name: Fetch AWS SSM parameters
          uses: dkershner6/aws-ssm-getparameters-action@v2
          with:
              parameterPairs: "SLACK_WEBHOOK_URL = SLACK_WEBHOOK_URL"
    
        - name: check assume role
          run: aws sts get-caller-identity
    
        - name: Install dependencies if cache does not exist
          run: npm install

        - name: Diff infraStack
          run: npm run cdk diff infraStack
